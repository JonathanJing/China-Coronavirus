summary(results.ex3)
qf(0.05, 2, 5, lower.tail=F)  ## critical value
MPGrating <- c(31, 30, 29, 33, 26,
30, 29, 29, 31, 25,
30, 29, 28, 29, 26)
type   <- c(rep("X", 5), rep("Y", 5), rep("Z", 5))
Automoblie <- factor(rep(1:5, times = 3))
Crescent <- data.frame(MPGrating , Automoblie, type)
results.ex3 <- aov(MPGrating  ~ type + Automoblie, data = Crescent)
summary(results.ex3)
qf(0.05, 2, 5, lower.tail=F)  ## critical value
?pnorm
pnorm(0.0207,3325,1000)
pnorm(0.0207,3325,1000/sqrt(180))
pnorm(0.0207,3325,1000)
1-pnorm(0.0207,3325,1000)
pnorm(0.0207,3325,(1000/sqrt(180))
1000/sqrt(180)
pnorm(0.0207,3325,74.5356)
pnorm(3173,3325,74.5356)
1-pnorm(0.0207)
1-pnorm(2.01)
#Q2
#H0 mu <= 4
#Ha mu > 4
#upper tail test
m1 <- 4.5
s1 <- 1
n1 <- 18
x1 <- 4
sd1 <- s1/sqrt(n1)
t1 <- (x1-m1)/sd1
#p-value = p(t(17)>2.08)
p1 <- pt(t1,n1-1)
p1
(4.5-4)/sd1
1-pt(2.12,n-1)
1-pt(2.12,17)
#Q2
#H0 mu <= 4
#Ha mu > 4
#upper tail test
m1 <- 4
s1 <- 1
n1 <- 18
x1 <- 4.5
sd1 <- s1/sqrt(n1)
t1 <- (x1-m1)/sd1
#p-value = p(t(17)>2.08)
p1 <- 1-pt(t1,n1-1)
p1
data <- c(35,25,37,40,33,
34,35,38,27,31,
30,35,35,37,38)
type <- c(rep("50",5), rep("60",5), rep("70",5))
dat <- data.frame(data,type)
result.ex <- aov(data ~ type, data = dat)
summary(result.ex)
1-pf(f,3,21)
#2
SSTR <- 1100
SSE <- 2100-1100-500
k <- 4
b <- 8
MSTR <- SSTR/(k-1)
MSE <- SSE/((k-1)*(b-1))
f <- MSTR/MSE
1-pf(f,3,21)
#3
data <- c(3.77,3.72,3.87,3.76,3.83,3.85,3.93,3.79,3.78,3.81,3.69,
3.83,3.83,3.85,3.77,3.84,3.84,4.04,3.78,3.84,3.84,3.83,
3.78,3.87,3.89,3.79,3.87,3.87,3.99,3.79,3.79,3.86,3.86)
type <- c(rep("Shell",11),rep("BP",11),rep("Marathon",11))
gas <- factor(rep(1:11, time = 3))
dat <- data.frame(data,gas,type)
result <- aov(data ~ type+gas, data = dat)
summary(result)
20*(2*4+4*4+3*4)
644/20
124/25
12*20
4*2*20+4*4*20+4*3*20
225+40+20+98+224+150+98
900-855
?table
?colMeans
?kmeans
install.packages("rjson")
?rjson
??rjson
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
library("rjson")
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- fromJSON(file=json_file)
json_data
str(json_data)
name(json_data)
names(json_data)
str(json_data)
dim(json_data)
time <- json_data$data$times
time
province <- json_data$list
province
province
province <- json_data$data$list
province
province <- json_data$data$list$name
province
province[] <- json_data$data$list$name
province
library("rjson")
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- fromJSON(file=json_file)
time <- json_data$data$times
View(json_data)
province <- json_data$data$list
str(province)
data <- json_data$data$list
gc()
province <- data$name
province <- data$name
data[province] <- json_data$data$list
View(data)
data[1]
str(data[1])
data <- json_data$data$list
for i in data:
province[i] <- data[i]$name
data_frame <- as.data.frame(json_data$data$list)
library("rjson")
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- fromJSON(file=json_file)
time <- json_data$data$times
data_frame <- as.data.frame(json_data)
data_frame <- as.data.frame(json_data$data)
data_frame <- as.data.frame(json_data$data$list)
time <- json_data$data$times
data <- json_data$data$list
data
data$name
data[1]$name
data[1]
data[[1]]$name
data[$name
data[]$name
data[[]]$name
data[[ ]]$name
data[[2]]$name
data[] <- json_data$data$list
data[1]
data[[1]]$name
View(data)
View(json_data)
dim(data)
str(data)
data[[1]]$city
as.data.frame(data[[1]]$city)
province[data[[1]]$name] <- as.data.frame(data[[1]]$city)
province <- as.data.frame(data[[1]]$city)
as.data.frame(data[[1]]$city)
province <- as.data.frame(data[[1]]$city)
str(province)
for (i in data[[i]]$city)
{
province[i] <- data[[i]]$name
}
data <- json_data$data$list
for (i in data[[i]]$city){
province[i] <- data[[i]]$name
}
for (i in data[[i]]$city){
province <- data[[i]]$name
}
for (i in data){
province <- data[[i]]$name
}
for (i in 34){
province <- data[[i]]$name
}
province
province[] <- data[[i]]$name
province
province[1]
province[i] <- data[[i]]$name
data <- json_data$data$list
for (i in 34){
province[i] <- data[[i]]$name
}
province
data[[2]]$name
data[[3]]$name
province[3]
install.packages("jsonlite")
library(jsonlite)
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- fromJSON(file=json_file)
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- stream_in(file(json_file))
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- stream_in(file('json_file'))
json_data <- stream_in(file(json_file))
?flatten
library(rjson)
library(jsonlite)
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- fromJSON(file=json_file)
?fromJSON
json_data <- fromJSON(json_file)
View(json_data)
str(json_data)
data_flatten <- flatten(json_data)
?flatten
json_data <- fromJSON(json_file)
data_flatten <- flatten(json_data)
json_data$data$list
str(json_data$data$list)
data_flatten <- flatten(json_data$data$list)
str(data_flatten)
View(data_flatten)
View(data_flatten)
library(tibble)
data_tbl <- as_data_frame(data_flat)
str(data_flatten)
library(tibble)
data_tbl <- as_data_frame(data_flatten)
str(data_tbl)
View(data_tbl)
View(data_tbl)
data_flatten$name
data_flatten$name$city
data_flatten$name[1]$city
data_flatten$city
View(data_flatten[[7]][[1]])
View(data_flatten[[7]][[2]])
data_flatten[[7]][[2]]
install.packages("ggmap")
?ggmap
library(ggmap)
china <- ggmap("china", plot = F)
??ggmap
?get_map
install.packages("MAP")
install.packages("mapdata")
library(map)
install.packages("map")
china <- get_map("china")
?register_google
showing_key()
google_key(AIzaSyDoNZIMxOMz_jY1MP0WQKpx7gJqrhGxO1U)
register_google(AIzaSyDoNZIMxOMz_jY1MP0WQKpx7gJqrhGxO1U)
ggmap::register_google(key = "AIzaSyDoNZIMxOMz_jY1MP0WQKpx7gJqrhGxO1U")
china <- get_map("china")
if(!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("dkahle/ggmap", ref = "tidyup", force=TRUE)
library(ggmap)
ggmap::register_google(key = "AIzaSyDoNZIMxOMz_jY1MP0WQKpx7gJqrhGxO1U")
china <- get_map("china")
china <- get_map("china")
china <- get_map("china")
china <- get_map("china")
register_google(key = "AIzaSyDoNZIMxOMz_jY1MP0WQKpx7gJqrhGxO1U")
china <- get_map("china")
google_key()
has_google_key()
has_google_account()
google_account()
day_file <- 'https://view.inews.qq.com/g2/getOnsInfo?name=wuwei_ww_cn_day_counts'
day_data <- fromJSON(json_file)
day_flatten <- flatten(json_data$data$list)
library(jsonlite)
##daily data
library(jsonlite)
day_file <- 'https://view.inews.qq.com/g2/getOnsInfo?name=wuwei_ww_cn_day_counts'
day_data <- fromJSON(json_file)
day_flatten <- flatten(json_data$data$list)
View(day_flatten)
View(json_data)
View(day_data)
##daily data
library(jsonlite)
day_file <- 'https://view.inews.qq.com/g2/getOnsInfo?name=wuwei_ww_cn_day_counts'
day_data <- fromJSON(json_file)
day_data <- fromJSON(day_file)
day_flatten <- flatten(json_data$data$list)
day_flatten <- flatten(day_data$data$list)
View(day_data)
day_flatten <- flatten(day_data$data)
day_flatten <- flatten(day_data)
day_data$data
day_data
day_data[["data"]]
str(day_data)
str(day_data$data)
as.data.frame(day_data$data)
x <- as.data.frame(day_data$data)
x
x <- as_data_frame(day_data$data)
?strsplit
strsplit(day_data$data, '\n')
strsplit(day_data$data, '\\n')
strsplit(day_data$data, ',\n')
strsplit(day_data$data, '\n')
##daily data
library(jsonlite)
day_file <- 'https://view.inews.qq.com/g2/getOnsInfo?name=wuwei_ww_cn_day_counts'
day_data <- fromJSON(day_file)
day_data <- strsplit(day_data$data, '\n')
strsplit(day_data$data, '\n')
day_data
strsplit(day_data$data, '\')
day_data <- fromJSON(day_file)
day_data$data <- strsplit(day_data$data, '\n')
strsplit(day_data$data, '\')
strsplit(day_data$data, '\"')
strsplit(day_data$data, ' ')
day_data$data[1]
day_data$data[0]
day_file <- 'https://view.inews.qq.com/g2/getOnsInfo?name=wuwei_ww_cn_day_counts'
day_data <- fromJSON(day_file)
day_data <- day_data$data
day_data <- strsplit(day_data, '\n')
strsplit(day_data, ':')
split(day_data, ':')
day_data
day_data[2]
day_data[1]
day_data[0]
strsplit(day_data[1], ':')
strsplit(day_data[1], '')
strsplit(day_data, '')
as.data.frame(day_data)
str(as.data.frame(day_data))
day_data <- fromJSON(day_file)
day_data2 <- day_data$data
day_data3 <- strsplit(day_data2, '\n')
day_data4 <- as.data.frame(day_data3)
str(day_data)
str(day_data2)
str(day_data3)
str(day_data4)
day_data4[1]
day_data4[2]
day_data <- fromJSON(day_file)
day_data2 <- day_data$data
day_data3 <- strsplit(day_data2, '\n')
head(day_data2)
day_data3 <- strsplit(day_data2, '\n')
day_data3 <- strsplit(day_data3, '\n')
head(day_data3)
day_data4 <- strsplit(day_data3, '\')
##ggmap test##
library(ggmap)
library(Hmisc)
register_google(key = "AIzaSyDoNZIMxOMz_jY1MP0WQKpx7gJqrhGxO1U")
map <- get_map('Hubei')
ggmap(map)
######
library(rgdal)
library(ggplot2)
library(plyr)
mydat <- readOGR('china-shapefiles-master/china.shp')
length(mydat)
x <- mydat@data
xs <- data.frame(x,id=seq(0:30)-1)
mydat1 <- fortify(mydat)
china_map_data <- join(mydat1, xs, type = "full")
ggplot(china_map_data,aes(x=long,y=lat,group=group), fill = ) +
#geom_polygon(fill="white",colour="grey") +
geom_polygon(colour="grey60") +
coord_map("polyconic")
#####
?str_remove
??str_remove
install.packages("stringr")
library(stringr)
#day_data3 <- strsplit(day_data2, '\n')
day_data3 <- str_remove(day_data2, '\n')
day_data3
#day_data4 <- strsplit(day_data3, '')
day_data4 <- str_remove(day_data3, '\')
##ggmap test##
library(ggmap)
library(Hmisc)
register_google(key = "AIzaSyDoNZIMxOMz_jY1MP0WQKpx7gJqrhGxO1U")
map <- get_map('Hubei')
ggmap(map)
######
library(rgdal)
library(ggplot2)
library(plyr)
mydat <- readOGR('china-shapefiles-master/china.shp')
length(mydat)
x <- mydat@data
xs <- data.frame(x,id=seq(0:30)-1)
mydat1 <- fortify(mydat)
china_map_data <- join(mydat1, xs, type = "full")
ggplot(china_map_data,aes(x=long,y=lat,group=group), fill = ) +
#geom_polygon(fill="white",colour="grey") +
geom_polygon(colour="grey60") +
coord_map("polyconic")
#####
#day_data4 <- strsplit(day_data3, '')
day_data4 <- str_remove(day_data3, ' ')
day_data4
#day_data4 <- strsplit(day_data3, '')
day_data4 <- str_remove(day_data3, ':')
day_data4
library(jsonlite)
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- fromJSON(json_file)
data_flatten <- flatten(json_data$data$list)
time <- json_data$data$mtime
name <- data_flatten$name
pop <- as.numeric(data_flatten$value)
provdata <- data.frame(time = time, provname = name, provpop = pop)
date <- as.Date(time)
citylist <- c()
surepop <- c()
provname <- c()
direct_city <- function(i){
city <- name[i]
connum <- pop[i]
prov <- name[i]
citylist <- c(citylist, city)
surepop <- c(surepop, connum)
provname <- c(provname, prov)
return(citylist, surepop, provname)
}
direct_city_list <- c(1,7,15,23,27,28,29) #z直辖市及港澳台地区
direct_city(direct_city_list)
for (i in 1:34) {
city <- data_flatten$city[[i]]$name
connum <- data_flatten$city[[i]]$conNum
prov <- rep(data_flatten$name[i], times = nrow(data_flatten$city[[i]]))
citylist <- c(citylist, city)
surepop <- c(surepop, connum)
provname <- c(provname, prov)
}
citydata <- data.frame(time = time, provname = provname, city = citylist, citypop = as.numeric(surepop))
write.csv(provdata, file = paste(date,'provdata.csv'))
write.csv(citydata, file = paste(date,'citydata.csv'))
library(RSQLite)
conn <- dbConnect(RSQLite::SQLite(), 'YiqingData.db')
dbWriteTable(conn, paste(date,'provdata'), provdata)
dbWriteTable(conn, paste(date,'citydata'), citydata)
library(leafletCN)
geojsonMap(provdata, "province",
namevar = ~provname, valuevar = ~provpop,
popup =  paste0(provdata$provname, ":", provdata$provpop),
palette = "Reds", legendTitle = "省级确诊人口")
geojsonMap(citydata, "city",
namevar = ~city, valuevar = ~citypop,
popup =  paste0(citydata$city, ":", citydata$citypop),
na.color = "white", stroke = T,
palette = "Reds", legendTitle = "确诊人口")
geojsonMap(provdata, "province",
namevar = ~provname, valuevar = ~provpop,
popup =  paste0(provdata$provname, ":", provdata$provpop),
palette = "Reds", legendTitle = "省级确诊人口")
library(jsonlite)
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Study/yiqing/China-Coronavirus")
json_data <- fromJSON(json_file)
data_flatten <- flatten(json_data$data$list)
rm(list=ls()) # remove all existing objects in the environment
library(jsonlite)
json_file <- 'https://interface.sina.cn/news/wap/fymap2020_data.d.json'
json_data <- fromJSON(json_file)
data_flatten <- flatten(json_data$data$list)
time <- json_data$data$mtime
name <- data_flatten$name
pop <- as.numeric(data_flatten$value)
provdata <- data.frame(time = time, provname = name, provpop = pop)
date <- as.Date(time)
citylist <- c()
surepop <- c()
provname <- c()
direct_city <- function(i){
city <- name[i]
connum <- pop[i]
prov <- name[i]
citylist <- c(citylist, city)
surepop <- c(surepop, connum)
provname <- c(provname, prov)
return(citylist, surepop, provname)
}
for (i in 1:34) {
city <- data_flatten$city[[i]]$name
connum <- data_flatten$city[[i]]$conNum
prov <- rep(data_flatten$name[i], times = nrow(data_flatten$city[[i]]))
citylist <- c(citylist, city)
surepop <- c(surepop, connum)
provname <- c(provname, prov)
}
citydata <- data.frame(time = time, provname = provname, city = citylist, citypop = as.numeric(surepop))
write.csv(provdata, file = paste(date,'provdata.csv'))
write.csv(citydata, file = paste(date,'citydata.csv'))
library(RSQLite)
conn <- dbConnect(RSQLite::SQLite(), 'YiqingData.db')
dbWriteTable(conn, paste(date,'provdata'), provdata)
dbWriteTable(conn, paste(date,'citydata'), citydata)
library(leafletCN)
geojsonMap(provdata, "china",
namevar = ~provname, valuevar = ~provpop,
popup =  paste0(provdata$provname, ":", provdata$provpop),
palette = "Reds", legendTitle = "省级确诊人口")
geojsonMap(citydata, "city",
namevar = ~city, valuevar = ~citypop,
popup =  paste0(citydata$city, ":", citydata$citypop),
na.color = "white", stroke = T,
palette = "Reds", legendTitle = "确诊人口")
